{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Workspace\\\\system-music\\\\mobile\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Audio } from 'expo-av';\n\nvar playIcon = require(\"./assets/play.png\");\n\nvar pauseIcon = require(\"./assets/pause.png\");\n\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      listmusic = _useState2[0],\n      setListmusic = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      playing = _useState4[0],\n      setPlaying = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loaded = _useState6[0],\n      setLoaded = _useState6[1];\n\n  var sound = useRef(new Audio.Sound());\n\n  var getList = function getList() {\n    var response, json;\n    return _regeneratorRuntime.async(function getList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://localhost:3333/music'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setListmusic(json);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0.message);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var setSound = function setSound(uri) {\n    var result;\n    return _regeneratorRuntime.async(function setSound$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(sound.current._key);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(sound.current.loadAsync({\n              uri: uri\n            }, {}, true));\n\n          case 3:\n            result = _context2.sent;\n\n            if (result.isLoaded === false) {\n              setLoaded(false);\n            } else {\n              setLoaded(true);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var playSound = function playSound() {\n    var result;\n    return _regeneratorRuntime.async(function playSound$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(sound.current.getStatusAsync());\n\n          case 2:\n            result = _context3.sent;\n\n            if (result.isLoaded) {\n              if (!result.isPlaying) {\n                sound.current.playAsync();\n              }\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getList();\n  }, []);\n  useEffect(function () {\n    playSound();\n  }, [loaded]);\n\n  var handlePlay = function handlePlay() {};\n\n  var handleMusic = function handleMusic(uri) {\n    setSound(uri);\n  };\n\n  var itemlist = function itemlist(_ref) {\n    var item = _ref.item;\n    return React.createElement(View, {\n      onClick: function onClick() {\n        handleMusic(item.uri);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }, React.createElement(Image, {\n      style: styles.thumbnail,\n      source: {\n        uri: item.art\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Adicionadas Recentemente\"), React.createElement(FlatList, {\n    data: listmusic,\n    horizontal: true,\n    renderItem: itemlist,\n    keyExtractor: function keyExtractor(item) {\n      return item.uri;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(Image, {\n    onClick: handlePlay,\n    style: styles.playButton,\n    source: playing ? pauseIcon : playIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#454545'\n  },\n  thumbnail: {\n    width: '30vw',\n    height: '30vw',\n    objectFit: 'cover',\n    boxShadow: '0 0 10px rgba(0,0,0,.5)',\n    marginLeft: '2vw'\n  },\n  title: {\n    color: '#FFF',\n    margin: '2vw',\n    fontSize: '1.35rem'\n  },\n  playButton: {\n    width: '10vw',\n    height: '10vw',\n    margin: '5vw'\n  }\n});","map":{"version":3,"sources":["D:/Workspace/system-music/mobile/App.js"],"names":["React","useState","useEffect","useRef","Audio","playIcon","require","pauseIcon","App","listmusic","setListmusic","playing","setPlaying","loaded","setLoaded","sound","Sound","getList","fetch","response","json","console","error","message","setSound","uri","log","current","_key","loadAsync","result","isLoaded","playSound","getStatusAsync","isPlaying","playAsync","handlePlay","handleMusic","itemlist","item","styles","thumbnail","art","container","title","playButton","StyleSheet","create","flex","backgroundColor","width","height","objectFit","boxShadow","marginLeft","color","margin","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;;;;;AAGA,SAASC,KAAT,QAAsB,SAAtB;;AAEA,IAAMC,QAAQ,GAAGC,OAAO,qBAAxB;;AACA,IAAMC,SAAS,GAAGD,OAAO,sBAAzB;;AAEA,eAAe,SAASE,GAAT,GAAe;AAAA;;AAC5B,kBAAkCP,QAAQ,EAA1C;AAAA;AAAA,MAAOQ,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA8BT,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA4BX,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOY,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,KAAK,GAAGZ,MAAM,CAAC,IAAIC,KAAK,CAACY,KAAV,EAAD,CAApB;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEWC,KAAK,CAAC,6BAAD,CAFhB;;AAAA;AAENC,YAAAA,QAFM;AAAA;AAAA,6CAGOA,QAAQ,CAACC,IAAT,EAHP;;AAAA;AAGNA,YAAAA,IAHM;AAIZV,YAAAA,YAAY,CAACU,IAAD,CAAZ;AAJY;AAAA;;AAAA;AAAA;AAAA;AAMZC,YAAAA,OAAO,CAACC,KAAR,CAAc,YAAIC,OAAlB;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAUA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfJ,YAAAA,OAAO,CAACK,GAAR,CAAYX,KAAK,CAACY,OAAN,CAAcC,IAA1B;AADe;AAAA,6CAGMb,KAAK,CAACY,OAAN,CAAcE,SAAd,CAAwB;AAACJ,cAAAA,GAAG,EAACA;AAAL,aAAxB,EAAmC,EAAnC,EAAuC,IAAvC,CAHN;;AAAA;AAGTK,YAAAA,MAHS;;AAKf,gBAAIA,MAAM,CAACC,QAAP,KAAoB,KAAxB,EAA+B;AAC7BjB,cAAAA,SAAS,CAAC,KAAD,CAAT;AACD,aAFD,MAEM;AACJA,cAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AATc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAYA,MAAMkB,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACKjB,KAAK,CAACY,OAAN,CAAcM,cAAd,EADL;;AAAA;AACVH,YAAAA,MADU;;AAEhB,gBAAGA,MAAM,CAACC,QAAV,EAAoB;AAClB,kBAAI,CAACD,MAAM,CAACI,SAAZ,EAAuB;AACrBnB,gBAAAA,KAAK,CAACY,OAAN,CAAcQ,SAAd;AACD;AACF;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AASAjC,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIAf,EAAAA,SAAS,CAAC,YAAM;AACd8B,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACnB,MAAD,CAFM,CAAT;;AAIA,MAAMuB,UAAU,GAAG,SAAbA,UAAa,GAAM,CAExB,CAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACZ,GAAD,EAAS;AAC3BD,IAAAA,QAAQ,CAACC,GAAD,CAAR;AACD,GAFD;;AAIA,MAAMa,QAAQ,GAAG,SAAXA,QAAW;AAAA,QAAEC,IAAF,QAAEA,IAAF;AAAA,WACf,oBAAC,IAAD;AACE,MAAA,OAAO,EAAE,mBAAM;AAACF,QAAAA,WAAW,CAACE,IAAI,CAACd,GAAN,CAAX;AAAsB,OADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAEe,MAAM,CAACC,SADhB;AAEE,MAAA,MAAM,EAAE;AAAChB,QAAAA,GAAG,EAACc,IAAI,CAACG;AAAV,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADe;AAAA,GAAjB;;AAWA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEnC,SADR;AAEE,IAAA,UAAU,EAAE,IAFd;AAGE,IAAA,UAAU,EAAE6B,QAHd;AAIE,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIA,IAAI,CAACd,GAAT;AAAA,KAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEW,UAAhB;AAA4B,IAAA,KAAK,EAAEI,MAAM,CAACK,UAA1C;AAAsD,IAAA,MAAM,EAAGlC,OAAD,GAAYJ,SAAZ,GAAwBF,QAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD;AAED,IAAMmC,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,MAAM,EAAE,MAFC;AAGTC,IAAAA,SAAS,EAAE,OAHF;AAITC,IAAAA,SAAS,EAAE,yBAJF;AAKTC,IAAAA,UAAU,EAAE;AALH,GALoB;AAY/BV,EAAAA,KAAK,EAAE;AACLW,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,MAAM,EAAE,KAFH;AAGLC,IAAAA,QAAQ,EAAE;AAHL,GAZwB;AAiB/BZ,EAAAA,UAAU,EAAE;AACVK,IAAAA,KAAK,EAAE,MADG;AAEVC,IAAAA,MAAM,EAAE,MAFE;AAGVK,IAAAA,MAAM,EAAE;AAHE;AAjBmB,CAAlB,CAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport { StyleSheet, Text, View, Image, FlatList } from 'react-native';\n\nimport { Audio } from 'expo-av';\n\nconst playIcon = require('./assets/play.png');\nconst pauseIcon = require('./assets/pause.png');\n\nexport default function App() {\n  const [listmusic, setListmusic] = useState();\n  const [playing, setPlaying] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  const sound = useRef(new Audio.Sound());\n\n  const getList = async () => {\n    try {\n      const response = await fetch('http://localhost:3333/music');\n      const json = await response.json();\n      setListmusic(json);\n    }catch(err) {\n      console.error(err.message);\n    }\n  }\n\n  const setSound = async (uri) => {\n    console.log(sound.current._key);\n    \n    const result = await sound.current.loadAsync({uri:uri}, {}, true);\n   \n    if (result.isLoaded === false) {\n      setLoaded(false);\n    }else {\n      setLoaded(true);\n    }\n  }\n\n  const playSound = async () => {\n    const result = await sound.current.getStatusAsync();\n    if(result.isLoaded) {\n      if (!result.isPlaying) {\n        sound.current.playAsync();\n      }\n    }\n  }\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  useEffect(() => {\n    playSound();\n  }, [loaded])\n\n  const handlePlay = () => {\n    \n  }\n\n  const handleMusic = (uri) => {\n    setSound(uri);\n  }\n\n  const itemlist = ({item}) => (\n    <View\n      onClick={() => {handleMusic(item.uri)}}\n    >\n      <Image \n        style={styles.thumbnail}\n        source={{uri:item.art}}\n      ></Image>\n    </View>\n  )\n    \n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Adicionadas Recentemente</Text>\n      <FlatList\n        data={listmusic}\n        horizontal={true}\n        renderItem={itemlist}\n        keyExtractor={item => item.uri}\n      ></FlatList>\n      <Image onClick={handlePlay} style={styles.playButton} source={(playing) ? pauseIcon : playIcon}></Image>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#454545'\n  },\n  thumbnail: {\n    width: '30vw',\n    height: '30vw',\n    objectFit: 'cover',\n    boxShadow: '0 0 10px rgba(0,0,0,.5)',\n    marginLeft: '2vw'\n  },\n  title: {\n    color: '#FFF',\n    margin: '2vw',\n    fontSize: '1.35rem'\n  },\n  playButton: {\n    width: '10vw',\n    height: '10vw',\n    margin: '5vw'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}