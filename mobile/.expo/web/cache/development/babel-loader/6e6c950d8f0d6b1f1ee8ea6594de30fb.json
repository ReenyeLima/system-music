{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\system-music\\\\mobile\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Audio } from 'expo-av';\nexport default function App() {\n  var playbackObject = new Audio.Sound();\n  var track = {\n    uri: 's3://system-music/Costa Gold - UAU! (Clipe Oficial).mp3'\n  };\n\n  function playSound() {\n    var _await$Audio$Sound$cr, playbackObject;\n\n    return _regeneratorRuntime.async(function playSound$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync({\n              uri: 'http://foo/bar.mp3'\n            }, {\n              shouldPlay: true\n            }));\n\n          case 2:\n            _await$Audio$Sound$cr = _context.sent;\n            playbackObject = _await$Audio$Sound$cr.sound;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: playSound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"PLAY\"));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["D:/Workspace/system-music/mobile/App.js"],"names":["React","useState","StatusBar","Audio","App","playbackObject","Sound","track","uri","playSound","createAsync","shouldPlay","sound","playAsync","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;;AAGA,SAASC,KAAT,QAAsB,SAAtB;AAEA,eAAe,SAASC,GAAT,GAAe;AAE5B,MAAMC,cAAc,GAAG,IAAIF,KAAK,CAACG,KAAV,EAAvB;AAEA,MAAIC,KAAK,GAAG;AACVC,IAAAA,GAAG,EAAE;AADK,GAAZ;;AAIA,WAAeC,SAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC0CN,KAAK,CAACG,KAAN,CAAYI,WAAZ,CACtC;AAAEF,cAAAA,GAAG,EAAE;AAAP,aADsC,EAEtC;AAAEG,cAAAA,UAAU,EAAE;AAAd,aAFsC,CAD1C;;AAAA;AAAA;AACiBN,YAAAA,cADjB,yBACUO,KADV;AAAA;AAAA,6CAMQA,KAAK,CAACC,SAAN,EANR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF;AAOD;AAED,IAAMK,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\nimport { Audio } from 'expo-av';\n\nexport default function App() {\n\n  const playbackObject = new Audio.Sound();\n\n  let track = {\n    uri: 's3://system-music/Costa Gold - UAU! (Clipe Oficial).mp3'\n  }\n\n  async function playSound() {\n    const { sound: playbackObject } = await Audio.Sound.createAsync(\n      { uri: 'http://foo/bar.mp3' },\n      { shouldPlay: true }\n    );\n\n    await sound.playAsync()\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <StatusBar style=\"auto\" />\n      <Button onPress={playSound}>PLAY</Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}